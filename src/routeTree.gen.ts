/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as LayoutImport } from "./routes/_layout";
import { Route as LayoutIndexImport } from "./routes/_layout/index";

// Create Virtual Routes

const ProductsIndexLazyImport = createFileRoute("/products/")();
const BookstoreIndexLazyImport = createFileRoute("/bookstore/")();
const ProductsPostIdLazyImport = createFileRoute("/products/$postId")();
const LayoutTableLazyImport = createFileRoute("/_layout/table")();
const LayoutPostsLazyImport = createFileRoute("/_layout/posts")();
const LayoutFormLazyImport = createFileRoute("/_layout/form")();
const LayoutContactLazyImport = createFileRoute("/_layout/contact")();
const LayoutAboutLazyImport = createFileRoute("/_layout/about")();
const authLoginLazyImport = createFileRoute("/(auth)/login")();
const LayoutPostPostIdLazyImport = createFileRoute("/_layout/post/$postId")();

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: "/_layout",
  getParentRoute: () => rootRoute,
} as any);

const ProductsIndexLazyRoute = ProductsIndexLazyImport.update({
  path: "/products/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/products/index.lazy").then((d) => d.Route),
);

const BookstoreIndexLazyRoute = BookstoreIndexLazyImport.update({
  path: "/bookstore/",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/bookstore/index.lazy").then((d) => d.Route),
);

const LayoutIndexRoute = LayoutIndexImport.update({
  path: "/",
  getParentRoute: () => LayoutRoute,
} as any);

const ProductsPostIdLazyRoute = ProductsPostIdLazyImport.update({
  path: "/products/$postId",
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import("./routes/products/$postId.lazy").then((d) => d.Route),
);

const LayoutTableLazyRoute = LayoutTableLazyImport.update({
  path: "/table",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import("./routes/_layout/table.lazy").then((d) => d.Route),
);

const LayoutPostsLazyRoute = LayoutPostsLazyImport.update({
  path: "/posts",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import("./routes/_layout/posts.lazy").then((d) => d.Route),
);

const LayoutFormLazyRoute = LayoutFormLazyImport.update({
  path: "/form",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import("./routes/_layout/form.lazy").then((d) => d.Route));

const LayoutContactLazyRoute = LayoutContactLazyImport.update({
  path: "/contact",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import("./routes/_layout/contact.lazy").then((d) => d.Route),
);

const LayoutAboutLazyRoute = LayoutAboutLazyImport.update({
  path: "/about",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import("./routes/_layout/about.lazy").then((d) => d.Route),
);

const authLoginLazyRoute = authLoginLazyImport
  .update({
    path: "/login",
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import("./routes/(auth)/login.lazy").then((d) => d.Route));

const LayoutPostPostIdLazyRoute = LayoutPostPostIdLazyImport.update({
  path: "/post/$postId",
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import("./routes/_layout/post.$postId.lazy").then((d) => d.Route),
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_layout": {
      id: "/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/(auth)/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof authLoginLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout/about": {
      id: "/_layout/about";
      path: "/about";
      fullPath: "/about";
      preLoaderRoute: typeof LayoutAboutLazyImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/contact": {
      id: "/_layout/contact";
      path: "/contact";
      fullPath: "/contact";
      preLoaderRoute: typeof LayoutContactLazyImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/form": {
      id: "/_layout/form";
      path: "/form";
      fullPath: "/form";
      preLoaderRoute: typeof LayoutFormLazyImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/posts": {
      id: "/_layout/posts";
      path: "/posts";
      fullPath: "/posts";
      preLoaderRoute: typeof LayoutPostsLazyImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/table": {
      id: "/_layout/table";
      path: "/table";
      fullPath: "/table";
      preLoaderRoute: typeof LayoutTableLazyImport;
      parentRoute: typeof LayoutImport;
    };
    "/products/$postId": {
      id: "/products/$postId";
      path: "/products/$postId";
      fullPath: "/products/$postId";
      preLoaderRoute: typeof ProductsPostIdLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout/": {
      id: "/_layout/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LayoutIndexImport;
      parentRoute: typeof LayoutImport;
    };
    "/bookstore/": {
      id: "/bookstore/";
      path: "/bookstore";
      fullPath: "/bookstore";
      preLoaderRoute: typeof BookstoreIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/products/": {
      id: "/products/";
      path: "/products";
      fullPath: "/products";
      preLoaderRoute: typeof ProductsIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout/post/$postId": {
      id: "/_layout/post/$postId";
      path: "/post/$postId";
      fullPath: "/post/$postId";
      preLoaderRoute: typeof LayoutPostPostIdLazyImport;
      parentRoute: typeof LayoutImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRoute: LayoutRoute.addChildren({
    LayoutAboutLazyRoute,
    LayoutContactLazyRoute,
    LayoutFormLazyRoute,
    LayoutPostsLazyRoute,
    LayoutTableLazyRoute,
    LayoutIndexRoute,
    LayoutPostPostIdLazyRoute,
  }),
  authLoginLazyRoute,
  ProductsPostIdLazyRoute,
  BookstoreIndexLazyRoute,
  ProductsIndexLazyRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/login",
        "/products/$postId",
        "/bookstore/",
        "/products/"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/about",
        "/_layout/contact",
        "/_layout/form",
        "/_layout/posts",
        "/_layout/table",
        "/_layout/",
        "/_layout/post/$postId"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.lazy.tsx"
    },
    "/_layout/about": {
      "filePath": "_layout/about.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/contact": {
      "filePath": "_layout/contact.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/form": {
      "filePath": "_layout/form.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/posts": {
      "filePath": "_layout/posts.lazy.tsx",
      "parent": "/_layout"
    },
    "/_layout/table": {
      "filePath": "_layout/table.lazy.tsx",
      "parent": "/_layout"
    },
    "/products/$postId": {
      "filePath": "products/$postId.lazy.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/bookstore/": {
      "filePath": "bookstore/index.lazy.tsx"
    },
    "/products/": {
      "filePath": "products/index.lazy.tsx"
    },
    "/_layout/post/$postId": {
      "filePath": "_layout/post.$postId.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
